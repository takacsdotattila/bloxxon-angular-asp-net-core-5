// <auto-generated />
using System;
using Billing.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Billing.API.Migrations
{
    [DbContext(typeof(SalesContext))]
    partial class SalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Billing.API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "t.start@bloxxon.co",
                            FirstName = "Tony",
                            ImgUrl = "https://i.imgflip.com/1bepoi.jpg",
                            LastName = "Stark"
                        },
                        new
                        {
                            Id = 2,
                            Email = "p.parker@bloxxon.co",
                            FirstName = "Peter",
                            ImgUrl = "https://media.tenor.com/images/980f9c417ca728c305659728764998c1/tenor.gif",
                            LastName = "Parker"
                        },
                        new
                        {
                            Id = 3,
                            Email = "b.banner@bloxxon.co",
                            FirstName = "Bruce",
                            ImgUrl = "https://img1.looper.com/img/gallery/will-bruce-banner-be-in-the-disney-she-hulk-series/intro-1569264697.jpg",
                            LastName = "Banner"
                        },
                        new
                        {
                            Id = 4,
                            Email = "robert.jabadiah.ph.freeman@boondocxxx.com",
                            FirstName = "Robert",
                            ImgUrl = "https://thesource.com/wp-content/uploads/2019/06/Check-Out-Robert-Freemans-Design-From-The-Boondocks-Reboot.jpg",
                            LastName = "Freeman"
                        });
                });

            modelBuilder.Entity("Billing.API.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50000,
                            CustomerId = 2,
                            DeadLine = new DateTime(2021, 3, 25, 23, 4, 31, 811, DateTimeKind.Utc).AddTicks(4669)
                        });
                });

            modelBuilder.Entity("Billing.API.Models.Invoice", b =>
                {
                    b.HasOne("Billing.API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
